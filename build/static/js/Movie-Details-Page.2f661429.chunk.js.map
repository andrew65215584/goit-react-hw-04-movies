{"version":3,"sources":["components/MovieActors.js","components/MovieRewievs.js","view/MovieDetailsPage.js"],"names":["MovieActors","state","actors","Axios","get","this","props","match","params","movieId","setState","data","cast","map","actor","key","cast_id","src","profile_path","alt","name","character","Component","MovieReviews","reviews","results","review","id","author","content","MovieDetailsPage","genres","response","original_title","title","poster_path","popularity","overview","from","location","query","history","push","pathname","search","onClick","handleClick","className","style","width","height","el","to","url","path","component"],"mappings":"0NAwCeA,E,4MAnCbC,MAAQ,CACNC,OAAQ,I,kMAIaC,IAAMC,IAAN,6CACmBC,KAAKC,MAAMC,MAAMC,OAAOC,QAD3C,4BARV,qC,OAQLP,E,OAING,KAAKK,SAAS,CAAER,OAAQA,EAAOS,KAAKC,O,qIAIpC,OACE,oCACE,mGACA,4BACGP,KAAKJ,MAAMC,OAAOW,KAAI,SAAAC,GACrB,OACE,wBAAIC,IAAKD,EAAME,SACb,yBACEC,IAAG,yCAAoCH,EAAMI,cAC7CC,IAAI,KAEN,2BAAIL,EAAMM,MACV,2BAAIN,EAAMO,qB,GA1BAC,aC4BXC,E,4MA5BbtB,MAAQ,CACNuB,QAAS,I,kMAIarB,IAAMC,IAAN,6CACkBC,KAAKC,MAAMC,MAAMC,OAAOC,QAD1C,4BAPX,mCAOW,2B,OAAhBe,E,OAGNnB,KAAKK,SAAS,CAAEc,QAASA,EAAQb,KAAKc,U,qIAItC,OACE,oCACE,4CACA,4BACGpB,KAAKJ,MAAMuB,QAAQX,KAAI,SAAAa,GAAM,OAC5B,wBAAIX,IAAKW,EAAOC,IACd,2BAAID,EAAOE,QACX,2BAAIF,EAAOG,mB,GApBEP,aCMrBQ,E,4MACJ7B,MAAQ,CACN8B,OAAQ,I,gNAIe5B,IAAMC,IAAN,6CACiBC,KAAKC,MAAMC,MAAMC,OAAOC,QADzC,oBARZ,mCAQY,oB,OAAjBuB,E,SAUFA,EAASrB,KANXsB,E,EAAAA,eACAC,E,EAAAA,MACAC,E,EAAAA,YACAC,E,EAAAA,WACAL,E,EAAAA,OACAM,E,EAAAA,SAGFhC,KAAKK,SAAS,CAEZyB,cACAC,aACAL,SACAM,WAEAH,MAAOD,GAAkCC,EACzCI,KAAMjC,KAAKC,MAAMiC,SAAStC,MAAMqC,KAChCE,MAAOnC,KAAKC,MAAMiC,SAAStC,MAAMuC,Q,0IAKnCnC,KAAKC,MAAMmC,QAAQC,KAAK,CACtBC,SAAUtC,KAAKJ,MAAMqC,KACrBE,MAAOnC,KAAKJ,MAAMuC,MACjBI,OAAQvC,KAAKJ,MAAMuC,MAAX,iBAA6BnC,KAAKJ,MAAMuC,OAAU,O,+BAIrD,IAAD,OACP,OACE,oCACE,4BAAQK,QAAS,kBAAM,EAAKC,gBAA5B,WACA,yBAAKC,UAAU,sBACb,yBACE9B,IAAG,yCAAoCZ,KAAKJ,MAAMkC,aAClDhB,IAAI,8EACJ4B,UAAU,UACVC,MACE3C,KAAKJ,MAAMkC,YAAc,GAAK,CAAEc,MAAO,QAASC,OAAQ,WAI5D,6BACE,gCAAM7C,KAAKJ,MAAMiC,OACjB,2BAAI7B,KAAKJ,MAAMmC,YACf,wCACA,2BAAI/B,KAAKJ,MAAMoC,UACf,sCACA,4BACGhC,KAAKJ,MAAM8B,OAAOlB,KAAI,SAAAsC,GACrB,OAAO,wBAAIpC,IAAKoC,EAAGxB,IAAZ,IAAkBwB,EAAG/B,YAKpC,6BACE,sDACA,4BACE,kBAAC,IAAD,CAAMgC,GAAE,UAAK/C,KAAKC,MAAMC,MAAM8C,IAAtB,UACN,wBAAItC,IAAK,QAAT,SAGF,kBAAC,IAAD,CAAMqC,GAAE,UAAK/C,KAAKC,MAAMC,MAAM8C,IAAtB,aACN,wBAAItC,IAAK,WAAT,cAKN,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEuC,KAAI,UAAKjD,KAAKC,MAAMC,MAAM+C,KAAtB,SACJC,UAAWvD,IAEb,kBAAC,IAAD,CACEsD,KAAI,UAAKjD,KAAKC,MAAMC,MAAM+C,KAAtB,YACJC,UAAWhC,U,GAtFQD,aA8FhBQ","file":"static/js/Movie-Details-Page.2f661429.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nconst apiKey = 'c6a84470b29816d87dd13d4e239e0619';\r\n\r\nclass MovieActors extends Component {\r\n  state = {\r\n    actors: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const actors = await Axios.get(\r\n      `https://api.themoviedb.org/3/movie/${this.props.match.params.movieId}/credits?api_key=${apiKey}`,\r\n    );\r\n\r\n    this.setState({ actors: actors.data.cast });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Кто снимался</h1>\r\n        <ul>\r\n          {this.state.actors.map(actor => {\r\n            return (\r\n              <li key={actor.cast_id}>\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w300${actor.profile_path}`}\r\n                  alt=\"\"\r\n                />\r\n                <p>{actor.name}</p>\r\n                <p>{actor.character}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieActors;\r\n","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nconst apiKey = 'c6a84470b29816d87dd13d4e239e0619';\r\nclass MovieReviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const reviews = await Axios.get(\r\n      `https://api.themoviedb.org/3/movie/${this.props.match.params.movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`,\r\n    );\r\n    this.setState({ reviews: reviews.data.results });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>MovieReviews</h1>\r\n        <ul>\r\n          {this.state.reviews.map(review => (\r\n            <li key={review.id}>\r\n              <p>{review.author}</p>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieReviews;\r\n","import React, { Component } from 'react';\r\n\r\nimport Axios from 'axios';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport MovieActors from '../components/MovieActors';\r\nimport MovieReviews from '../components/MovieRewievs';\r\n\r\nconst apiKey = 'c6a84470b29816d87dd13d4e239e0619';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    genres: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await Axios.get(\r\n      `https://api.themoviedb.org/3/movie/${this.props.match.params.movieId}?api_key=${apiKey}&language=en-US`,\r\n    );\r\n    const {\r\n      original_title,\r\n      title,\r\n      poster_path,\r\n      popularity,\r\n      genres,\r\n      overview,\r\n    } = response.data;\r\n\r\n    this.setState({\r\n      // ...response.data,\r\n      poster_path,\r\n      popularity,\r\n      genres,\r\n      overview,\r\n\r\n      title: original_title ? original_title : title,\r\n      from: this.props.location.state.from,\r\n      query: this.props.location.state.query,\r\n    });\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.history.push({\r\n      pathname: this.state.from,\r\n      query: this.state.query,\r\n       search: this.state.query ? `?query=${this.state.query}` : '',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <button onClick={() => this.handleClick()}>Go Back</button>\r\n        <div className=\"contentWrapperFilm\">\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w300${this.state.poster_path}`}\r\n            alt=\"{Постер фильма}\"\r\n            className=\"filmImg\"\r\n            style={\r\n              this.state.poster_path ? {} : { width: '700px', height: '700px' }\r\n            }\r\n          />\r\n\r\n          <div>\r\n            <h1> {this.state.title}</h1>\r\n            <p>{this.state.popularity}</p>\r\n            <h3>Overview</h3>\r\n            <p>{this.state.overview}</p>\r\n            <h3>Genres</h3>\r\n            <ul>\r\n              {this.state.genres.map(el => {\r\n                return <li key={el.id}> {el.name}</li>;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h2>Additional information</h2>\r\n          <ul>\r\n            <Link to={`${this.props.match.url}/cast`}>\r\n              <li key={'Cast'}>Cast</li>\r\n            </Link>\r\n\r\n            <Link to={`${this.props.match.url}/reviews`}>\r\n              <li key={'reviews'}>Reviews</li>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route\r\n            path={`${this.props.match.path}/cast`}\r\n            component={MovieActors}\r\n          />\r\n          <Route\r\n            path={`${this.props.match.path}/reviews`}\r\n            component={MovieReviews}\r\n          />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}